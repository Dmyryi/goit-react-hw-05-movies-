{"version":3,"file":"static/js/209.2832673e.chunk.js","mappings":"mOA8CA,UAzCe,WAAO,IAADA,EACnBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,EAAmC,QAA7BP,EAAGK,EAAaG,IAAI,iBAAS,IAAAR,EAAAA,EAAI,GAC7CS,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAAjCG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAExBG,GAAsCJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,IAElCG,EAAAA,EAAAA,YAAU,WACL,IAAMC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEGC,EAAAA,EAAAA,IAAarB,GAAQ,KAAD,EAApCiB,EAAOC,EAAAI,KACbhB,EAAUW,GAASC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEnBM,QAAQC,MAAM,0BAAyBP,EAAAK,IAAS,yBAAAL,EAAAQ,OAAA,GAAAV,EAAA,kBAEnD,kBAPmB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KASpBhB,GACF,GAAG,CAACZ,IAQJ,OACE6B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,YACFF,EAAAA,EAAAA,MAAA,QAAMI,SARM,SAACC,GACpBA,EAAIC,iBACJpC,EAAgB,CAAEC,OAAQS,GAC5B,EAKsCsB,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SACEI,KAAK,OACLC,MAAO5B,EACP6B,SAAU,SAACJ,GAAG,OAAKxB,EAAewB,EAAIK,OAAOF,MAAM,KAErDL,EAAAA,EAAAA,KAAA,UAAQI,KAAK,SAAQL,SAAC,eAExBC,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CAACnC,OAAQA,MAGzB,C,oDCzBA,IAlBiB,SAACoC,GACd,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACIX,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAAD,SAEKU,EAAMpC,OAAOuC,KAAI,SAACC,GAAI,OAC1BA,EAAKC,iBACLd,EAAAA,EAAAA,KAAA,MAAAD,UACDC,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaJ,EAAKK,IAAMC,MAAO,CAACC,KAAKV,GAAUX,SAAEc,EAAKQ,SADpDR,EAAKK,GAER,OAKnB,C","sources":["Pages/Movies.js","components/MoviesList.js"],"sourcesContent":["import {useState, useEffect} from 'react'\nimport {  useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'api/api';\nimport MovieList from '../components/MoviesList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search') ?? ''; // Set to an empty string if null\n  const [movies, setMovies] = useState([]);\n\n  const [searchQuery, setSearchQuery] = useState('')\n\n  useEffect(() => {\n       const fetchMovies = async () => {\n      try {\n        const results = await searchMovies(search);\n        setMovies(results);\n      } catch (error) {\n        console.error('Error searching movies:', error);\n      }\n    };\n\n    fetchMovies();\n  }, [search]);\n\n\nconst handleSubmit = (evt) => {\n  evt.preventDefault();\n  setSearchParams({ search: searchQuery });\n};\n  \n  return (\n    <>\n      <div>Movies</div>\n         <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={(evt) => setSearchQuery(evt.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MovieList movies={movies} />\n    </>\n  );\n};\nexport default Movies;","import { Link, useLocation } from 'react-router-dom';\n\nconst MovieList =(props)=> {\n    const location = useLocation()\n\n    return (\n        <div>\n            <ul>\n                \n                {props.movies.map((item) => (\n             item.original_title && (\n             <li key={item.id}>\n            <Link to={`/movies/${item.id}`} state={{from:location}}>{item.title}</Link>\n             </li>)\n             ))}\n                </ul>\n                </div>\n    )\n}\n\nexport default MovieList;"],"names":["_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","search","get","_useState","useState","_useState2","movies","setMovies","_useState3","_useState4","searchQuery","setSearchQuery","useEffect","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","results","_context","prev","next","searchMovies","sent","t0","console","error","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","onSubmit","evt","preventDefault","type","value","onChange","target","MovieList","props","location","useLocation","map","item","original_title","Link","to","concat","id","state","from","title"],"sourceRoot":""}